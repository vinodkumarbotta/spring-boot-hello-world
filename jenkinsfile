pipeline {
    agent any
    environment {
        def scannerHome = tool 'sonarqube-vinod'
    }
    stages{
       
        stage("build code"){
            steps{
                script{
                    sh """
                    ls -lrt
                    mvn install
                    """
                }
            }
        }
        stage("Run Unit Test"){
            steps{
                script {
                    sh """
                    mvn test
                    """
                }
            }
        }
        stage("Code Analysis"){
            steps {
                withSonarQubeEnv('vinod-sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner -Dproject.settings=./vinod.properties"
                }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}